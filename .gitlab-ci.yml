stages:
  - setup
  - check
  - deploy

workflow:
  rules:
    # Create pipelines for merge request events
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    # Create a pipeline for the default branch
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    # Dont create a branch pipeline while there are open merge requests
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never

.on_version_tag:
  rules:
    # Deploy if a pushed to a  version tag
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-[0-9A-Za-z]+)?$/'

# Setup variables for the pipeline
variables:
  # Poetry settings
  POETRY_VERSION: 1.8.2
  POETRY_HOME: /usr/local
  POETRY_NO_INTERACTION: 1
  POETRY_VIRTUALENVS_CREATE: false
  POETRY_CACHE_DIR: $CI_PROJECT_DIR/.poetry_cache
  # Pip settings
  PIP_NO_CACHE_DIR: off
  PIP_DISABLE_PIP_VERSION_CHECK: on
  PIP_CACHE_DIR: $CI_PROJECT_DIR/.pip_cache



default:
  tags:
    - python
    - docker
  interruptible: true
  image: python:3.10
  before_script:
    - rm -rf dist doc package_name.egg-info build
    - python -V  # Print out python version for debugging
    - ls -la
    # Install Poetry
    - curl -sSL https://install.python-poetry.org | POETRY_VERSION=$POETRY_VERSION python3 -
    # Only install the development dependencies
    - poetry install --only dev --sync


cache: &cache
  key: "global-deps-$(checksum poetry.lock)"
  paths:
    - ${POETRY_CACHE_DIR}
    - ${PIP_CACHE_DIR}
  policy: pull

# Job to update pip cache
update-cache:
  stage: setup
  script:
  # Cache only the development dependencies
    - poetry install --only dev --sync
  cache:
    <<: *cache
    policy: pull-push

ruff:
  stage: check
  script:
    - ruff --version
    - ruff check
    - ruff format

check-poetry:
  stage: check
  script:
    - poetry --version
    - poetry check

# build the sources
build:
  stage: deploy
  variables:
    USERNAME: 'gitlab-ci-token'
    PASSWORD: '${CI_JOB_TOKEN}'
  script:
    - poetry config repositories.eta-fabrik https://$CI_SERVER_HOST/api/v4/projects/$CI_PROJECT_ID/packages/pypi
    - poetry publish --build --username $USERNAME --password $PASSWORD --repository eta-fabrik
  artifacts:
    name: "build-$CI_COMMIT_REF_NAME-$CI_JOB_STATUS"
    paths:
      - dist/
      - package_name.egg-info/
  rules:
    - !reference [.on_version_tag, rules]
