
[tool.poetry]
# Specify a package name. This name should match the name of the folder "package_name". All sources should
# be located in that folder
name = "cms_2025"
version = "0.2.0"
description = "Multi objective adaption of hardening oven process for cms 2025"
authors = ["Michael Frank, Technical University of Darmstadt, Institute for Production Management, Technology and Machine Tools (PTW). <m.frank@ptw.tu-darmstadt.de>"]
readme = "README.md"
license = "BSD-2-Clause License"

keywords = ["multi-objective optimization, pymoo"] 
# specify some classifiers, to signify, who you are developing for. See: https://pypi.org/classifiers/
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Manufacturing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11"
]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
numpy = "~1.26"
matplotlib = "^3.10.1"
pymoo = "^0.6.1.3"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.10"
pre-commit = "^3.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
include = ["pyproject.toml", "cms_2025/**/*.py"] 

line-length = 120
indent-width = 4

required-version = ">=0.4.0"
target-version= "py39"

# Only fix with $ruff check --fix
fix = false

[tool.ruff.lint]
select = [
    "F",       # Pyflakes
    "E", "W",  # Pycodestyle, Error and Warning
    "I",       # Isort
    "N",       # Pep8-naming conventions
    "UP",      # Pyupgrade
    "PL",      # Pylint
    "ERA",     # Eradicate
    "PD",      # Pandas-vet
    "NPY",     # NumPy-specific
    "RUF",     # Ruff


    # Flake8:
    # asyncio, bugbear, builtins, commas, comprehensions, datetimez, eradicate, future-annotations, implicit-str-concat
    # logging, logging-format, no-pep420, print, pyi, pytest-style, return, simplify, use-pathlib todo
    "ASYNC", "B", "A", "COM", "C4", "DTZ", "ERA", "FA", "ISC",
    "LOG", "G", "INP", "T20", "PYI", "PT", "RET", "SIM", "PTH", "TD"

]

ignore = [
    "SIM105",
    "PLR2004",  # Pylint: magic values
    # Recommended to ignore as they conflict with the formatter
    "W191", "E111", "E114", "E117", "D206", "D300", "COM812", "COM819", "ISC001"
]

[tool.ruff.lint.pylint]
# Configure these as wanted
max-args = 10
max-statements = 60
